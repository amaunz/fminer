=FMiner (A chemical fragment miner)
This is the official FMiner application. It depends on LibFMiner (http://github.com/amaunz/libfminer/tree/master). 
Latest scientific documentation is available from http://github.com/amaunz/fminer-doc/tree/master.
To create documentation with rdoc, do 'make doc'.

LibFMiner implements a method for efficiently mining relevant tree-shaped molecular fragments, each representing a geometrical classes, with minimum frequency and statistical constraints. Experimental results with four test datasets suggest that the approach is able to optimize correlation with chemical endpoints as well as inter-feature entropy. The mined fragments represent classes of fragments sharing a common core structure (backbone). The proposed method reduces feature set sizes and runtime by >90% and >60% compared to ordinary tree mining. Validation with several publicly available carcinogenicity datasets shows that their expressiveness is comparable to the complete set of tree-shaped fragments and is significantly higher than linear fragments.

==Switches (run fminer w/o arguments for allowable parameter ranges, defaults and explanations):

===Constraint parameters:
- -l Subgraph type, choices are paths and trees.
- -f Minimum frequency constraint, used for anti-monotonic pruning.
- -p Chi-square significance level, used for statistical upper-bound pruning.

===Constraint switches:
- -c Switch off mining of only the most significant/most general representative of each backbone.
- -x Deactivate upper bound pruning for chi-square constraint (less efficient, use only for performance evaluation).
- -j Deactivate dynamic adjustment of upper bound (less efficient, use only for performance evaluation). Can only be set when -c is not set.

===Remarks:
- Structures are output to STDOUT in YAML format.
- Each line of output is a YAML sequence, containing SMARTS fragment, p-value, and two sequences denoting positive and negative class occurrences (line numbers in Smiles file).

==Quick Examples:

1) Run:
./fminer -s data/hamster_male_carcinogenicity.smi -a data/hamster_male_carcinogenicity.class -p0.5 -c > outfile.yaml

2) Run without pruning:
./fminer -s data/hamster_male_carcinogenicity.smi -a data/hamster_male_carcinogenicity.class -p0.5 -c -x > outfile.pr.yaml

3) Run with free structures:
./fminer -s data/hamster_male_carcinogenicity.smi -a data/hamster_male_carcinogenicity.class -p0.5 > outfile.yaml

4) Run without adjustment of upper bound and free structures:
./fminer -s data/hamster_male_carcinogenicity.smi -a data/hamster_male_carcinogenicity.class -p0.5 -j > outfile.yaml


1) and 3) should outperform 2) and 4), respectively.


==Licensing information:
FMiner is free software ('free' as in 'freedom', see LICENSE).
Andreas Maunz, 2008.
